#Malware look-up tool -per-site-basis
mwtool() {
output_file="~/mwtool-$(date +%m-%d-%yT%H:%M).txt"
{
_domain=$(sup_getdomain)

  # Print domain name
  echo "Domain name: ${_domain}"

  echo -e "\n============================\n"

  # Print quarantined site files
  echo "Quarantined site files:"
  sup_quarantined | egrep "${_domain}"

  echo -e "\n============================\n"

  # Malware signature identifiers
  _mwsi1=$(sup_quarantined | egrep "${_domain}" | awk '{print $7}') #Malware string identifier
  _hex_identifiers=""
  _yara_identifiers=""
  _cav_identifiers=""

  if [[ -n "${_mwsi1}" ]]; then
    _hex_identifiers=$(echo "${_mwsi1}" | egrep -i 'HEX')   #List of all HEX files that were quarantined
    _yara_identifiers=$(echo "${_mwsi1}" | egrep -i 'YARA') #List of all YARA files that were quarantined
    _cav_identifiers=$(echo "${_mwsi1}" | egrep -i 'CAV') #List of all CAV files that were quarantined  
  fi

  # Sort and print HEX identifiers first, followed by YARA identifiers
  echo "Malware signature identifiers:"
  echo "${_hex_identifiers}" | sort
  echo "${_yara_identifiers}" | sort
  echo "${_cav_identifiers}" | sort

  echo -e "\n============================\n"

 # HEX File Investigation
    echo "HEX file investigation:"
  function investigate_hex_files() {
    if [[ -n "${_hex_identifiers}" ]]; then
      grep "${_hex_identifiers}" /usr/local/maldetect/sigs/hex.dat
    fi

    echo -e "\n============================\n"

    # Hexadecimal to ASCII conversion
    echo "Hexadecimal to ASCII:"

    file="/usr/local/maldetect/sigs/hex.dat"
    output=""
    prev_result=""

    while IFS= read -r line; do
      _mwshex=$(echo "$line" | awk -F":{HEX}" '{print $1}')
      _mwsascii=$(echo "$_mwshex" | xxd -r -p)

      if [[ $_mwsascii != $prev_result ]]; then
        if [[ -n $output ]]; then
          output+=$'\n'
        fi

        output+=$_mwsascii
        prev_result=$_mwsascii
      fi

    done < <(grep "${_hex_identifiers}" "$file")

    IFS=$'\n' read -d '' -ra parts <<< "$output"

    # Print each part on a new line
    for part in "${parts[@]}"; do
      echo "$part"
    done

    echo -e "\n============================\n"
  }

 # Call the function if HEX files are detected
  if [[ -n "${_hex_identifiers}" ]]; then
    investigate_hex_files
  else
    echo "There are no HEX files"
    echo -e "\n============================\n"
  fi

  # YARA file investigation
    echo "YARA file investigation:"
function investigate_yara_files() {
  if [[ -n "${_yara_identifiers}" ]]; then
    declare -A yara_outputs
    while IFS= read -r line; do

      _mwsi2=$(sup_quarantined | egrep "${_domain}" | awk '{print $6}') # Quarantined file full-path
      _mwsyara=$(echo "$line" | awk -F"{YARA}" '{print $2}') # Quarantined file malware string identifier
      _mwsoutput=$(sup_inspectmal -f "$_mwsi2" -s "$_mwsyara" 2>/dev/null)  # Redirect error to /dev/null

      if [[ -n $_mwsoutput ]]; then
        if [[ -z ${yara_outputs[$_mwsoutput]} ]]; then
          yara_outputs[$_mwsoutput]=1
          echo "$_mwsoutput"
        fi
      fi
    done <<< "${_yara_identifiers}"
  fi
}
# Call the function if YARA files are detected
  if [[ -n "${_yara_identifiers}" ]]; then
    investigate_yara_files
  else
    echo "There are no YARA files"
    echo -e "\n============================\n"
  fi

  echo -e "\n============================\n"

  # CAV file investigation
  echo "CAV file investigation:"
  echo "Not implemented yet!"

 echo -e "\n============================\n"

} >/dev/null 2>&1 # Redirect output to /dev/null

# Print a notification in the terminal
  echo "Output redirected to: $output_file" > /dev/tty
}

